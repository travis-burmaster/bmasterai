version: '3.8'

services:
  streamlit-app:
    build: .
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AIRFLOW_API_URL=${AIRFLOW_API_URL:-http://airflow-webserver:8080/api/v1}
      - AIRFLOW_USERNAME=${AIRFLOW_USERNAME:-airflow}
      - AIRFLOW_PASSWORD=${AIRFLOW_PASSWORD:-airflow}
      - MCP_SERVER_URL=http://airflow-mcp:3000
    volumes:
      - .:/app
    working_dir: /app
    command: streamlit run enhanced_app.py --server.address 0.0.0.0
    depends_on:
      - airflow-webserver
      - airflow-mcp
    networks:
      - airflow-network

  # Optional: Include Airflow services if you want a complete setup
  airflow-webserver:
    image: apache/airflow:2.7.0
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
      - AIRFLOW__WEBSERVER__AUTHENTICATE=False
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    ports:
      - "8088:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    depends_on:
      - postgres
    networks:
      - airflow-network
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username airflow --password airflow --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow webserver
      "

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow-network

  airflow-mcp:
    image: hipposysai/airflow-mcp:latest
    environment:
      - airflow_api_url=${AIRFLOW_API_URL:-http://airflow-webserver:8080/api/v1}
      - airflow_username=${AIRFLOW_USERNAME:-airflow}
      - airflow_password=${AIRFLOW_PASSWORD:-airflow}
    ports:
      - "3000:3000"
    depends_on:
      - airflow-webserver
    networks:
      - airflow-network

networks:
  airflow-network:
    driver: bridge

volumes:
  postgres_data:

